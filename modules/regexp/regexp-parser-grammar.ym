
%code top {
#include "regexp-parser-parser.h"
}

%code {

#include "regexp-parser.h"
#include "regexp-parser-parser.h"
#include "cfg-parser.h"
#include "cfg-grammar-internal.h"

}

%define api.prefix {regexp_parser_}

/* this parameter is needed in order to instruct bison to use a complete
 * argument list for yylex/yyerror */

%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {LogParser **instance}
%parse-param {gpointer arg}

/* INCLUDE_DECLS */

%token KW_REGEXP_PARSER
%token KW_PREFIX
%token KW_PATTERN

%type	<ptr> parser_expr_regexp

%%

start
	: LL_CONTEXT_PARSER parser_expr_regexp                  { YYACCEPT; }
	;

parser_expr_regexp
	: KW_REGEXP_PARSER '('
	  {
	    last_parser = *instance = (LogParser *) regexp_parser_new(configuration);
	  }
	  parser_regexp_opts
	  ')'					{ $$ = last_parser; }
	;

parser_regexp_opts
	: parser_regexp_opt parser_regexp_opts
	|
	;

parser_regexp_opt
	: KW_PREFIX '(' string ')'		{ regexp_parser_set_prefix(last_parser, $3); free($3); }
    | KW_PATTERN '(' string ')'		{ regexp_parser_set_pattern(last_parser, $3); free($3); }
	| parser_opt
	;

/* INCLUDE_RULES */

%%
